//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AutoEproof.OPSServise {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OPSServiceSoap", Namespace="http://tempuri.org/")]
    public partial class OPSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetArticleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteOPSWindowLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFMGStageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRvsFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAIDListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OPSService() {
            this.Url = global::AutoEproof.Properties.Settings.Default.AutoEproof_OPSServise_OPSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetArticleInfoCompletedEventHandler GetArticleInfoCompleted;
        
        /// <remarks/>
        public event GetArticleArticleCompletedEventHandler GetArticleArticleCompleted;
        
        /// <remarks/>
        public event WriteOPSWindowLogCompletedEventHandler WriteOPSWindowLogCompleted;
        
        /// <remarks/>
        public event GetFMGStageCompletedEventHandler GetFMGStageCompleted;
        
        /// <remarks/>
        public event GetRvsFileCompletedEventHandler GetRvsFileCompleted;
        
        /// <remarks/>
        public event GetAIDListCompletedEventHandler GetAIDListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArticleInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleInfo GetArticleInfo(string Client_, string JID_, string AID_) {
            object[] results = this.Invoke("GetArticleInfo", new object[] {
                        Client_,
                        JID_,
                        AID_});
            return ((ArticleInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleInfoAsync(string Client_, string JID_, string AID_) {
            this.GetArticleInfoAsync(Client_, JID_, AID_, null);
        }
        
        /// <remarks/>
        public void GetArticleInfoAsync(string Client_, string JID_, string AID_, object userState) {
            if ((this.GetArticleInfoOperationCompleted == null)) {
                this.GetArticleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleInfoOperationCompleted);
            }
            this.InvokeAsync("GetArticleInfo", new object[] {
                        Client_,
                        JID_,
                        AID_}, this.GetArticleInfoOperationCompleted, userState);
        }
        
        private void OnGetArticleInfoOperationCompleted(object arg) {
            if ((this.GetArticleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleInfoCompleted(this, new GetArticleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArticleArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleInfo GetArticleArticle(string Client_, string JID_, string AID_) {
            object[] results = this.Invoke("GetArticleArticle", new object[] {
                        Client_,
                        JID_,
                        AID_});
            return ((ArticleInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleArticleAsync(string Client_, string JID_, string AID_) {
            this.GetArticleArticleAsync(Client_, JID_, AID_, null);
        }
        
        /// <remarks/>
        public void GetArticleArticleAsync(string Client_, string JID_, string AID_, object userState) {
            if ((this.GetArticleArticleOperationCompleted == null)) {
                this.GetArticleArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleArticleOperationCompleted);
            }
            this.InvokeAsync("GetArticleArticle", new object[] {
                        Client_,
                        JID_,
                        AID_}, this.GetArticleArticleOperationCompleted, userState);
        }
        
        private void OnGetArticleArticleOperationCompleted(object arg) {
            if ((this.GetArticleArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleArticleCompleted(this, new GetArticleArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteOPSWindowLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WriteOPSWindowLog(string LogStr) {
            this.Invoke("WriteOPSWindowLog", new object[] {
                        LogStr});
        }
        
        /// <remarks/>
        public void WriteOPSWindowLogAsync(string LogStr) {
            this.WriteOPSWindowLogAsync(LogStr, null);
        }
        
        /// <remarks/>
        public void WriteOPSWindowLogAsync(string LogStr, object userState) {
            if ((this.WriteOPSWindowLogOperationCompleted == null)) {
                this.WriteOPSWindowLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteOPSWindowLogOperationCompleted);
            }
            this.InvokeAsync("WriteOPSWindowLog", new object[] {
                        LogStr}, this.WriteOPSWindowLogOperationCompleted, userState);
        }
        
        private void OnWriteOPSWindowLogOperationCompleted(object arg) {
            if ((this.WriteOPSWindowLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteOPSWindowLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFMGStage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFMGStage(string Client, string JID, string AID) {
            object[] results = this.Invoke("GetFMGStage", new object[] {
                        Client,
                        JID,
                        AID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFMGStageAsync(string Client, string JID, string AID) {
            this.GetFMGStageAsync(Client, JID, AID, null);
        }
        
        /// <remarks/>
        public void GetFMGStageAsync(string Client, string JID, string AID, object userState) {
            if ((this.GetFMGStageOperationCompleted == null)) {
                this.GetFMGStageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFMGStageOperationCompleted);
            }
            this.InvokeAsync("GetFMGStage", new object[] {
                        Client,
                        JID,
                        AID}, this.GetFMGStageOperationCompleted, userState);
        }
        
        private void OnGetFMGStageOperationCompleted(object arg) {
            if ((this.GetFMGStageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFMGStageCompleted(this, new GetFMGStageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRvsFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRvsFile(string Client, string JID, string AID) {
            object[] results = this.Invoke("GetRvsFile", new object[] {
                        Client,
                        JID,
                        AID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRvsFileAsync(string Client, string JID, string AID) {
            this.GetRvsFileAsync(Client, JID, AID, null);
        }
        
        /// <remarks/>
        public void GetRvsFileAsync(string Client, string JID, string AID, object userState) {
            if ((this.GetRvsFileOperationCompleted == null)) {
                this.GetRvsFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRvsFileOperationCompleted);
            }
            this.InvokeAsync("GetRvsFile", new object[] {
                        Client,
                        JID,
                        AID}, this.GetRvsFileOperationCompleted, userState);
        }
        
        private void OnGetRvsFileOperationCompleted(object arg) {
            if ((this.GetRvsFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRvsFileCompleted(this, new GetRvsFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAIDList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAIDList(string prefixText, int count, string contextKey) {
            object[] results = this.Invoke("GetAIDList", new object[] {
                        prefixText,
                        count,
                        contextKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAIDListAsync(string prefixText, int count, string contextKey) {
            this.GetAIDListAsync(prefixText, count, contextKey, null);
        }
        
        /// <remarks/>
        public void GetAIDListAsync(string prefixText, int count, string contextKey, object userState) {
            if ((this.GetAIDListOperationCompleted == null)) {
                this.GetAIDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAIDListOperationCompleted);
            }
            this.InvokeAsync("GetAIDList", new object[] {
                        prefixText,
                        count,
                        contextKey}, this.GetAIDListOperationCompleted, userState);
        }
        
        private void OnGetAIDListOperationCompleted(object arg) {
            if ((this.GetAIDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAIDListCompleted(this, new GetAIDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ArticleInfo {
        
        private string articleTitleField;
        
        private string authorNameField;
        
        private string authorEmailField;
        
        /// <remarks/>
        public string ArticleTitle {
            get {
                return this.articleTitleField;
            }
            set {
                this.articleTitleField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorName {
            get {
                return this.authorNameField;
            }
            set {
                this.authorNameField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorEmail {
            get {
                return this.authorEmailField;
            }
            set {
                this.authorEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetArticleInfoCompletedEventHandler(object sender, GetArticleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetArticleArticleCompletedEventHandler(object sender, GetArticleArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void WriteOPSWindowLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFMGStageCompletedEventHandler(object sender, GetFMGStageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFMGStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFMGStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRvsFileCompletedEventHandler(object sender, GetRvsFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRvsFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRvsFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAIDListCompletedEventHandler(object sender, GetAIDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAIDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAIDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591