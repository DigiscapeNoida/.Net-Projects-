using System;
using System.IO;
using DatabaseLayer;
using System.Text;
using System.Collections.Generic;
using ProcessNotification;
using System.Data.SqlClient;
using System.Configuration;
using System.Data;

namespace AutoEproof
{
    static class eProofResultNotification
    {
        //public static void InternalMail()
        //{

        //    StringBuilder MailBody = new StringBuilder("");

        //    string Result = string.Empty;
            
        //    MailBody.AppendLine("<html>");
        //    MailBody.AppendLine("<body>");

        //    MailBody.AppendLine("<p>Dear All,</p>");
        //    MailBody.AppendLine("<p>Please find the details of eproof as below:</p>");

        //    MailBody.AppendLine("<p>");

        //    MailBody.AppendLine(HtmlCode("IsValidJID", ValOBj.IsValidJID));
        //    MailBody.AppendLine(HtmlCode("IsCDCArtcle", ValOBj.IsCDCArticle));
        //    MailBody.AppendLine(HtmlCode("IsAlreadyProcessed", ValOBj.IsAlreadyProcessed));
        //    MailBody.AppendLine(HtmlCode("IsArticleTitleExist", ValOBj.IsArticleTitleExist));
        //    MailBody.AppendLine(HtmlCode("IsAuthorEmailExist", ValOBj.IsAuthorEmailExist));
        //    MailBody.AppendLine(HtmlCode("IsAuthorEMailWellForm", ValOBj.IsAuthorEMailWellForm));
        //    MailBody.AppendLine(HtmlCode("IsAuthorNameExist", ValOBj.IsAuthorNameExist));

        //    MailBody.AppendLine(HtmlCode("Article exist in Article Content Report", ValOBj.IsACRJID));

        //    MailBody.AppendLine(HtmlCode("ArticleTitle", PdfProcessOBJ.ArticleTitle));
        //    MailBody.AppendLine(HtmlCode("AuthorEMail", PdfProcessOBJ.AuthorEMail));
        //    MailBody.AppendLine(HtmlCode("AuthorName", PdfProcessOBJ.AuthorName));
        //    MailBody.AppendLine(HtmlCode("Article content report email id", PdfProcessOBJ.ACRCorMail));

        //    MailBody.AppendLine("</p>");

        //    MailBody.AppendLine("<p>With regards,<BR>");
        //    MailBody.AppendLine("Auto eProof System</p>");
        //    MailBody.AppendLine("<p>This is an autogenerated mail, please do not reply directly to this mail.</p>");

        //    MailBody.AppendLine("</body>");
        //    MailBody.AppendLine("</html>");
        //    MailDetail MailDetailObj = new MailDetail();

        //    MailDetailObj.MailFrom = "eproof@thomsondigital.com";
        //    MailDetailObj.MailSubject = Result + " notification of " + PdfProcessOBJ.JID + " " + PdfProcessOBJ.AID + " (" + PdfProcessOBJ.Stage + ")";

        //    MailDetailObj.MailTo = PdfProcessOBJ.JIDOPSDetail.FailEmail;
        //    //MailDetailObj.MailCC = "puneet.j@thomsondigital.com"; ;

        //    MailDetailObj.MailBody = MailBody.ToString();

        //    eMailProcess eMailProcessOBJ = new eMailProcess();
        //    eMailProcessOBJ.SendMailExternal(MailDetailObj);

        //}

        public static void InternalMail(eProofArticleInfo PdfProcessOBJ)
        {

            IValidation ValOBj = (IValidation)PdfProcessOBJ;
            StringBuilder MailBody = new StringBuilder("");

            string Result = string.Empty;
            Result = ValOBj.ValidationResult ? "Success" : "Failure";
            MailBody.AppendLine("<html>");
            MailBody.AppendLine("<body>");

            MailBody.AppendLine("<p>Dear All,</p>");
            MailBody.AppendLine("<p>Please find the details of eproof as below:</p>");

            MailBody.AppendLine("<p>");

            MailBody.AppendLine(HtmlCode("IsValidJID", ValOBj.IsValidJID));
            MailBody.AppendLine(HtmlCode("IsCDCArtcle", ValOBj.IsCDCArticle));
            MailBody.AppendLine(HtmlCode("IsAlreadyProcessed", ValOBj.IsAlreadyProcessed));
            MailBody.AppendLine(HtmlCode("IsArticleTitleExist", ValOBj.IsArticleTitleExist));
           // MailBody.AppendLine(HtmlCode("IsMatchCorEmailXMLANDDB", ValOBj.IsMatchCorEmailXMLANDDB));
            MailBody.AppendLine(HtmlCode("IsAuthorEmailExist", ValOBj.IsAuthorEmailExist));
            MailBody.AppendLine(HtmlCode("IsAuthorEMailWellForm", ValOBj.IsAuthorEMailWellForm));
            MailBody.AppendLine(HtmlCode("IsAuthorNameExist", ValOBj.IsAuthorNameExist));
            MailBody.AppendLine(HtmlCode("IsPdfPagesEqualAutopage", ValOBj.IsPdfPagesEqualAutopage));
            MailBody.AppendLine(HtmlCode("PdfPages", ValOBj.PdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("AutoPdfPages", ValOBj.AutoPdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("IscPDFExist", ValOBj.IscPDFExist));  
            MailBody.AppendLine(HtmlCode("IsQueryPDFExist", ValOBj.IsQueryIDExist));
            MailBody.AppendLine(HtmlCode("ArticleTitle", PdfProcessOBJ.ArticleTitle));
            MailBody.AppendLine(HtmlCode("AuthorEMail", PdfProcessOBJ.AuthorEMail));
            MailBody.AppendLine(HtmlCode("AuthorName", PdfProcessOBJ.AuthorName));
            MailBody.AppendLine(HtmlCode("AJIM Editor", PdfProcessOBJ.EditorName == "" ? "N/A" : PdfProcessOBJ.EditorName));
            MailBody.AppendLine(HtmlCode("Article content report email id", PdfProcessOBJ.ACRCorMail));

            MailBody.AppendLine(HtmlCode("Remark ", PdfProcessOBJ.Remark));

            
            MailBody.AppendLine("</p>");

            MailBody.AppendLine("<p>With regards,<BR>");
            MailBody.AppendLine("Auto eProof System</p>");
            MailBody.AppendLine("<p>This is an autogenerated mail, please do not reply directly to this mail.</p>");

            MailBody.AppendLine("</body>");
            MailBody.AppendLine("</html>");
            MailDetail MailDetailObj = new MailDetail();

            MailDetailObj.MailFrom = "eproof@thomsondigital.com";
            MailDetailObj.MailSubject = Result + " notification of " + PdfProcessOBJ.JID + " " + PdfProcessOBJ.AID + " (" + PdfProcessOBJ.Stage + ")";

            MailDetailObj.MailTo = PdfProcessOBJ.JIDOPSDetail.FailEmail;
            //MailDetailObj.MailCC = "puneet.j@thomsondigital.com"; ;

            MailDetailObj.MailBody = MailBody.ToString();

            if (ValOBj.ValidationResult == false)
            {
                   ChkMailAtchMnt(ValOBj.PDFPath, MailDetailObj);
            }


            eMailProcess eMailProcessOBJ = new eMailProcess();
            eMailProcessOBJ.SendMailExternal(MailDetailObj);

        }
        public static void InternalAEPSMail(eProof PdfProcessOBJ)
        {

            IValidation ValOBj = (IValidation)PdfProcessOBJ;
            StringBuilder MailBody = new StringBuilder("");

            string Result = string.Empty;
            Result = ValOBj.ValidationResult ? "Success" : "Failure";
            MailBody.AppendLine("<html>");
            MailBody.AppendLine("<body>");

            MailBody.AppendLine("<p>Dear All,</p>");
            MailBody.AppendLine("<p>Please find the details of eproof as below:</p>");

            MailBody.AppendLine("<p>");

            MailBody.AppendLine(HtmlCode("IsValidJID",            ValOBj.IsValidJID));
            MailBody.AppendLine(HtmlCode("IsCDCArtcle",           ValOBj.IsCDCArticle));
            MailBody.AppendLine(HtmlCode("IsAlreadyProcessed",    ValOBj.IsAlreadyProcessed));
            MailBody.AppendLine(HtmlCode("IsArticleTitleExist",   ValOBj.IsArticleTitleExist));
            MailBody.AppendLine(HtmlCode("IsAuthorEmailExist",    ValOBj.IsAuthorEmailExist));
            MailBody.AppendLine(HtmlCode("IsAuthorEMailWellForm", ValOBj.IsAuthorEMailWellForm));
            MailBody.AppendLine(HtmlCode("IsAuthorNameExist",     ValOBj.IsAuthorNameExist));
            MailBody.AppendLine(HtmlCode("IsPdfPagesEqualAutopage", ValOBj.IsPdfPagesEqualAutopage));
            MailBody.AppendLine(HtmlCode("IscPDFExist", ValOBj.IscPDFExist));
            MailBody.AppendLine(HtmlCode("IsQueryPDFExist", ValOBj.IsQueryIDExist));

            //Addedd on 15-12-2016 by Krunesh
            //Begin
            try
            {
                if (PdfProcessOBJ.MNT.JID == "PIN")
                {

                    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["OPSConnectionString"].ConnectionString);
                    con.Open();

                    string _inputStage = "S100";

                    SqlDataAdapter da = new SqlDataAdapter("Select * from wileywip where JID='" + PdfProcessOBJ.MNT.JID + "' and AID='" + PdfProcessOBJ.MNT.AID + "' and STAGE='" + _inputStage +"'", con);

                    DataSet ds = new DataSet();
                    da.Fill(ds);
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        string editorialRefCode = ds.Tables[0].Rows[0]["VOL"].ToString();
                        if (editorialRefCode != string.Empty)
                        {
                            bool IsEditorialRefCode = true;
                            MailBody.AppendLine(HtmlCode("IsEditorialCodeExists", IsEditorialRefCode));
                        }
                        else
                        {
                            bool IsEditorialRefCode = false;
                            MailBody.AppendLine(HtmlCode("IsEditorialCodeExists", IsEditorialRefCode));
                        }
                    }
                    con.Close();
                }
               
            }
            catch (Exception ex)
            {
                
              
            }
            
            //End


            MailBody.AppendLine(HtmlCode("PdfPages", ValOBj.PdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("AutoPdfPages", ValOBj.AutoPdfPages.ToString()));

            MailBody.AppendLine(HtmlCode("Article exist in Article Content Report", ValOBj.IsACRJID));

            MailBody.AppendLine(HtmlCode("ArticleTitle",         PdfProcessOBJ.ArtclInfo.ArticleTitle));
            MailBody.AppendLine(HtmlCode("AuthorEMail",          PdfProcessOBJ.ArtclInfo.AuthorEmail));
            MailBody.AppendLine(HtmlCode("AuthorName",           PdfProcessOBJ.ArtclInfo.AuthorName));

            MailBody.AppendLine(HtmlCode("Article content report email id", PdfProcessOBJ.ACRCorMail));

            MailBody.AppendLine(HtmlCode("Remark ", PdfProcessOBJ.Remark));

            MailBody.AppendLine("</p>");

            MailBody.AppendLine("<p>With regards,<BR>");
            MailBody.AppendLine("Auto eProof System</p>");
            MailBody.AppendLine("<p>This is an autogenerated mail, please do not reply directly to this mail.</p>");

            MailBody.AppendLine("</body>");
            MailBody.AppendLine("</html>");
            MailDetail MailDetailObj = new MailDetail();

            MailDetailObj.MailFrom = "eproof@thomsondigital.com";
            MailDetailObj.MailSubject = Result + " notification of " + PdfProcessOBJ.MNT.JID + " " + PdfProcessOBJ.MNT.AID + " (" + PdfProcessOBJ.MNT.Stage + ")";
            MailDetailObj.MailTo = PdfProcessOBJ.OPSDetailObj.FailEmail;
            MailDetailObj.MailCC = ""; ;

            MailDetailObj.MailBody = MailBody.ToString();

            if (ValOBj.ValidationResult == false)
            {
                   ChkMailAtchMnt(ValOBj.PDFPath, MailDetailObj);
            }
            eMailProcess eMailProcessOBJ = new eMailProcess();
            eMailProcessOBJ.SendMailExternal(MailDetailObj);

        }
        public static void InternalAEPSMail(eProofThieme PdfProcessOBJ)
        {

            IValidation ValOBj = (IValidation)PdfProcessOBJ;
            StringBuilder MailBody = new StringBuilder("");

            string Result = string.Empty;
            Result = ValOBj.ValidationResult ? "Success" : "Failure";
            MailBody.AppendLine("<html>");
            MailBody.AppendLine("<body>");

            MailBody.AppendLine("<p>Dear All,</p>");
            MailBody.AppendLine("<p>Please find the details of eproof as below:</p>");

            MailBody.AppendLine("<p>");

            MailBody.AppendLine(HtmlCode("IsValidJID", ValOBj.IsValidJID));
            MailBody.AppendLine(HtmlCode("IsCDCArtcle", ValOBj.IsCDCArticle));
            MailBody.AppendLine(HtmlCode("IsAlreadyProcessed", ValOBj.IsAlreadyProcessed));
            MailBody.AppendLine(HtmlCode("IsMatchCorEmailwithXMLAndDataBase", ValOBj.IsMatchCorEmailXMLANDDB));
            MailBody.AppendLine(HtmlCode("IsMatchDOI", ValOBj.IsMatchDOI));
            MailBody.AppendLine(HtmlCode("IsArticleTitleExist", ValOBj.IsArticleTitleExist));
            MailBody.AppendLine(HtmlCode("IsAuthorEmailExist", ValOBj.IsAuthorEmailExist));
            MailBody.AppendLine(HtmlCode("IsAuthorEMailWellForm", ValOBj.IsAuthorEMailWellForm));
            MailBody.AppendLine(HtmlCode("IsAuthorNameExist", ValOBj.IsAuthorNameExist));
            MailBody.AppendLine(HtmlCode("IsPdfPagesEqualAutopage", ValOBj.IsPdfPagesEqualAutopage));
            MailBody.AppendLine(HtmlCode("PdfPages", ValOBj.PdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("AutoPdfPages", ValOBj.AutoPdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("Article exist in Article Content Report", ValOBj.IsACRJID));

            MailBody.AppendLine(HtmlCode("ArticleTitle", PdfProcessOBJ.ArtclInfo.ArticleTitle));
            MailBody.AppendLine(HtmlCode("AuthorEMail", PdfProcessOBJ.ArtclInfo.AuthorEmail));
            MailBody.AppendLine(HtmlCode("AuthorName", PdfProcessOBJ.ArtclInfo.AuthorName));
            MailBody.AppendLine(HtmlCode("Remark ", PdfProcessOBJ.Remark));

            MailBody.AppendLine("</p>");

            MailBody.AppendLine("<p>With regards,<BR>");
            MailBody.AppendLine("Auto eProof System</p>");
            MailBody.AppendLine("<p>This is an autogenerated mail, please do not reply directly to this mail.</p>");

            MailBody.AppendLine("</body>");
            MailBody.AppendLine("</html>");
            MailDetail MailDetailObj = new MailDetail();

            MailDetailObj.MailFrom = "eproof@thomsondigital.com";
            MailDetailObj.MailSubject = Result + " notification of " + PdfProcessOBJ.MNT.JID + " " + PdfProcessOBJ.MNT.AID + " (" + PdfProcessOBJ.MNT.Stage + ")";
            MailDetailObj.MailTo = PdfProcessOBJ.OPSDetailObj.FailEmail;
            MailDetailObj.MailCC = ""; 

            MailDetailObj.MailBody = MailBody.ToString();

            if (ValOBj.ValidationResult == false)
            {
                ChkMailAtchMnt(ValOBj.PDFPath, MailDetailObj);
            }

            eMailProcess eMailProcessOBJ = new eMailProcess();
            eMailProcessOBJ.SendMailExternal(MailDetailObj);

        }
        public static void InternalReviseMail(ReviseProcess RvsPrcs)
        {
            IRValidation ValOBj= (IRValidation) RvsPrcs;
            StringBuilder MailBody = new StringBuilder("");

            string Result = string.Empty;
            Result = ValOBj.ValidationResult ? "Success" : "Failure";
            MailBody.AppendLine("<html>");
            MailBody.AppendLine("<body>");

            MailBody.AppendLine("<p>Dear All,</p>");
            MailBody.AppendLine("<p>Please find the details of eproof as below:</p>");

            MailBody.AppendLine("<p>");

            MailBody.AppendLine(HtmlCode("IsValidJID", ValOBj.IsValidJID));
            if (ValOBj.IsValidJID && RvsPrcs.OPSDetailObj != null)

            MailBody.AppendLine(HtmlCode("IsAlreadyProcessed", ValOBj.IsAlreadyProcessed));
            MailBody.AppendLine(HtmlCode("IsCorEmailExist", ValOBj.IsAuthorEmailExist));
            MailBody.AppendLine(HtmlCode("IsCorEMailWellForm", ValOBj.IsAuthorEMailWellForm));
            MailBody.AppendLine(HtmlCode("IsCorNameExist", ValOBj.IsAuthorNameExist));

            MailBody.AppendLine(HtmlCode("IsPdfPagesEqualAutopage", ValOBj.IsPdfPagesEqualAutopage));
            MailBody.AppendLine(HtmlCode("PdfPages", ValOBj.PdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("AutoPdfPages", ValOBj.AutoPdfPages.ToString()));

            MailBody.AppendLine(HtmlCode("CorEMail", RvsPrcs.OPSRvsObj.MailTo));
            MailBody.AppendLine(HtmlCode("CorName", RvsPrcs.OPSRvsObj.CorrName));
            MailBody.AppendLine(HtmlCode("Remark ", RvsPrcs.Remark));

            MailBody.AppendLine("</p>");

            MailBody.AppendLine("<p>With regards,<BR>");
            MailBody.AppendLine("Auto eProof System</p>");
            MailBody.AppendLine("<p>This is an autogenerated mail, please do not reply directly to this mail.</p>");

            MailBody.AppendLine("</body>");
            MailBody.AppendLine("</html>");
            MailDetail MailDetailObj = new MailDetail();

            MailDetailObj.MailFrom = "eproof@thomsondigital.com";
            MailDetailObj.MailSubject = Result + " notification of " + RvsPrcs.MNT.JID + " " + RvsPrcs.MNT.AID + " (" + RvsPrcs.MNT.Stage + ")";
            MailDetailObj.MailTo      = RvsPrcs.OPSDetailObj.FailEmail;

            MailDetailObj.MailBody = MailBody.ToString();

            if (ValOBj.ValidationResult == false)
            {
                ChkMailAtchMnt(ValOBj.PDFPath, MailDetailObj);
            }
            
           
            eMailProcess eMailProcessOBJ = new eMailProcess();
            eMailProcessOBJ.SendMailExternal(MailDetailObj);

        }

        private static void ChkMailAtchMnt(string PDFPath, MailDetail MailDetailObj)
        {
            if (File.Exists(PDFPath))
            {
                FileInfo FI = new FileInfo(PDFPath);
                if ((FI.Length / 1024) / 1024 < 10)
                {
                    MailDetailObj.MailAtchmnt.Add(PDFPath);
                }
            }
        }
        public static void InternalReviseMail(FAXProcess RvsPrcs)
        {
            IRValidation ValOBj = (IRValidation)RvsPrcs;
            StringBuilder MailBody = new StringBuilder("");

            string Result = string.Empty;
            Result = ValOBj.ValidationResult ? "Success" : "Failure";
            MailBody.AppendLine("<html>");
            MailBody.AppendLine("<body>");

            MailBody.AppendLine("<p>Dear All,</p>");
            MailBody.AppendLine("<p>Please find the details of eproof as below:</p>");

            MailBody.AppendLine("<p>");

            MailBody.AppendLine(HtmlCode("IsValidJID", ValOBj.IsValidJID));
            if (ValOBj.IsValidJID && RvsPrcs.OPSDetailObj != null)

            MailBody.AppendLine(HtmlCode("IsAlreadyProcessed", ValOBj.IsAlreadyProcessed));
            MailBody.AppendLine(HtmlCode("IsCorEmailExist", ValOBj.IsAuthorEmailExist));
            MailBody.AppendLine(HtmlCode("IsCorEMailWellForm", ValOBj.IsAuthorEMailWellForm));
            MailBody.AppendLine(HtmlCode("IsCorNameExist", ValOBj.IsAuthorNameExist));

            MailBody.AppendLine(HtmlCode("IsPdfPagesEqualAutopage", ValOBj.IsPdfPagesEqualAutopage));
            MailBody.AppendLine(HtmlCode("PdfPages", ValOBj.PdfPages.ToString()));
            MailBody.AppendLine(HtmlCode("AutoPdfPages", ValOBj.AutoPdfPages.ToString()));

            MailBody.AppendLine(HtmlCode("CorEMail", RvsPrcs.OPSFAXObj.MailTo));
            MailBody.AppendLine(HtmlCode("CorName", RvsPrcs.OPSFAXObj.CorrName));
            MailBody.AppendLine(HtmlCode("Remark ", RvsPrcs.Remark));
            MailBody.AppendLine("</p>");

            MailBody.AppendLine("<p>With regards,<BR>");
            MailBody.AppendLine("Auto eProof System</p>");
            MailBody.AppendLine("<p>This is an autogenerated mail, please do not reply directly to this mail.</p>");

            MailBody.AppendLine("</body>");
            MailBody.AppendLine("</html>");
            MailDetail MailDetailObj = new MailDetail();

            MailDetailObj.MailFrom = "eproof@thomsondigital.com";
            MailDetailObj.MailSubject = Result + " notification of " + RvsPrcs.MNT.JID + " " + RvsPrcs.MNT.AID + " (" + RvsPrcs.MNT.Stage + ")";
            MailDetailObj.MailTo = RvsPrcs.OPSDetailObj.FailEmail;

            MailDetailObj.MailBody = MailBody.ToString();

            if (ValOBj.ValidationResult == false)
            {
                ChkMailAtchMnt(ValOBj.PDFPath, MailDetailObj);
            }



            eMailProcess eMailProcessOBJ = new eMailProcess();
            eMailProcessOBJ.SendMailExternal(MailDetailObj);

        }
        private static string HtmlCode(string PrprtyName, bool PrprtyVal)
        {
            string Str = string.Empty;
            string MailLine = string.Empty;

            Str = PrprtyVal ? "YES" : "<b>NO</b>";

            if (PrprtyName.Equals("IsAlreadyProcessed"))
                MailLine = PrprtyName + " : <span style=\"color:red\"><b>" + Str + "</b></span><BR>";
            else
            {
                if (PrprtyVal)
                    MailLine = PrprtyName + " : <span style=\"color:blue\">" + Str + "</span><BR>";
                else
                    MailLine = PrprtyName + " : <span style=\"color:red\">" + Str + "</span><BR>";
            }


            return MailLine;
        }
        private static string HtmlCode(string PrprtyName, string PrprtyVal)
        {
            string MailLine = string.Empty;

            MailLine = PrprtyName + " : <span style=\"color:blue\">" + PrprtyVal + "</span><BR>";
            return MailLine;
        }
    }
}
